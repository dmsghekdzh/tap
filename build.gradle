import org.gradle.internal.jvm.Jvm

plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.2'
}

allprojects {
    apply plugin: 'java'

    group 'com.nemosw.spigot'
    version '1.3.3'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    compileJava.options.encoding = 'UTF-8'
    javadoc.options.encoding = 'UTF-8'

    repositories {
        jcenter() // max library
        mavenCentral() // junit
        mavenLocal() // nms spigot
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" } // bungeecord chat
        maven { url = "https://jitpack.io/"}
    }
}

subprojects {
    apply plugin: 'maven-publish'

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.12'

        Project core = project(':core')
        if (project != core)
            compile core
    }

    Project core = project(':core')

    if (project != core) {
        project.tasks.forEach { t ->

            if (t.getName() != 'clean') {
                t.onlyIf {
                    gradle.taskGraph.hasTask(':spigotJar') || parent.hasProperty('withNMS')
                }
            }
        }
    }

    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from sourceSets.main.allJava
    }

    task javadocJar(type: Jar) {
        archiveClassifier = 'javadoc'
        from javadoc
    }

    publishing {
        publications {
            Tap(MavenPublication) {
                artifactId = "$parent.name-$project.name"
                from components.java
                artifact sourcesJar
                artifact javadocJar
                pom {
                    name = parent.name + "-" + project.name
                    description = 'NemoSW minecraft library'
                    url = 'https://github.com/nemosrc/tap'
                    licenses {
                        license {
                            name = 'GPL-2.0'
                            url = 'http://www.opensource.org/licenses/gpl-2.0.php'
                        }
                    }
                    developers {
                        developer {
                            id = 'nemo'
                            name = 'Nemo'
                            email = 'nemosrc@gmail.com'
                            url = 'https://github.com/nemosrc'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/nemosrc/tap.git'
                        developerConnection = 'scm:git:ssh://github.com/nemosrc/tap.git'
                        url = 'https://github.com/nemosrc/tap'
                    }
                }
            }
        }
    }
}

project(':core') {
    processResources {
        filesMatching('**/*.yml') {
            expand project.properties
        }
    }

    repositories {
        maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    }

    dependencies {
        compileOnly files(Jvm.current().toolsJar)
        compileOnly 'org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT'
        compile 'com.github.nemosrc:mox-collection:1.1'
        compile 'com.nemosw.mox:mox-task:1.0'
        compile 'com.nemosw.mox:mox-math:1.0.2'
        compile 'com.nemosw.mox:mox-tools:1.1'
    }
}

shadowJar {
    archiveClassifier = 'universal'

    dependencies {
        exclude(dependency('com.google.code.gson:gson'))
    }
}

dependencies {
    compile subprojects
}

task spigotJar(type: Copy) {
    from shadowJar
    into '/run/plugins/'
}